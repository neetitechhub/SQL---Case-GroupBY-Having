/**
USE SALESDATA
CREATE TABLE SALES (
SALE_ID INT PRIMARY KEY,
ORDER_ID INT,
PRODUCT_ID INT, 
SALE_DATE DATE,
QUANTITY INT,
PRICE DECIMAL,
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
)

CREATE TABLE ORDERS (
ORDER_ID INT PRIMARY KEY,
ORDER_DATE DATE,
CUSTOMER_ID INT,
REGION_ID INT,
FOREIGN KEY (REGION_ID) REFERENCES REGIONS(REGION_ID)
)

CREATE TABLE PRODUCTS (
PRODUCT_ID INT PRIMARY KEY,
PRODUCT_NAME VARCHAR(100),
CATEGORY VARCHAR(100),
PRICE DECIMAL,
)
CREATE TABLE REGIONS (
REGION_ID INT PRIMARY KEY,
REGION_NAME VARCHAR(100)
)
----------------

INSERT INTO SALES (SALE_ID,	ORDER_ID,	PRODUCT_ID,	SALE_DATE,	QUANTITY,	PRICE) VALUES 
(1,	1001,	2001,	'2023-01-01',	2,	50.00),
(2,	1002,	2002,	'2023-01-02',	1,	30.00),
(3,	1001,	2001,	'2023-01-03',	1,	50.00),
(4,	1003,	2003,	'2023-01-04',	3,	20.00),
(5,	1004,	2002,	'2023-01-05',	1,	30.00)

INSERT INTO ORDERS (ORDER_ID,ORDER_DATE,CUSTOMER_ID,REGION_ID) VALUES
(1001,	'2023-01-01',	3001,	4001),
(1002,	'2023-01-02',	3002,	4002),
(1003,	'2023-01-03',	3003,	4003),
(1004,	'2023-01-04',	3004,	4004)


INSERT INTO PRODUCTS
(PRODUCT_ID, PRODUCT_NAME,	CATEGORY,	PRICE) VALUES
(2001,	'WIDGET',	'GADGETS',	50.00),
(2002,	'GIZMO',	'GADGETS',	30.00),
(2003,	'DOODAD',	'WIDGETS',	20.00)

INSERT INTO REGIONS (REGION_ID,REGION_NAME) VALUES
(4001,'NORTH'),
(4002,'SOUTH'),
(4003,'EAST'),
(4004,'WEST')
**/

--TOTAL SALES AMOUNT FOR EACH PRODUCT.

SELECT PRODUCT_ID,
       SUM(QUANTITY * PRICE) AS TOTAL_SALES
FROM SALES
GROUP BY PRODUCT_ID;

--TOTAL NUMBER OF SALES IN EACH REGION.

SELECT R.REGION_NAME,
       COUNT(S.SALE_ID) AS TOTAL_SALES
FROM SALES S
    JOIN ORDERS O
        ON S.ORDER_ID = O.ORDER_ID
    JOIN REGIONS R
        ON O.REGION_ID = R.REGION_ID
GROUP BY R.REGION_NAME;

--AVERAGE SALE AMOUNT PER ORDER.

SELECT ORDER_ID,
       AVG(QUANTITY * PRICE) AS AVG_SALE_AMOUNT
FROM SALES
GROUP BY ORDER_ID;

--TOP 5 PRODUCTS BY SALES QUANTITY.

SELECT TOP 5
    PRODUCT_ID,
    SUM(QUANTITY) AS TOTAL_QUANTITY
FROM SALES
GROUP BY PRODUCT_ID
ORDER BY TOTAL_QUANTITY DESC

--MONTHLY SALES TREND.

SELECT FORMAT(SALE_DATE, '%Y-%M') AS MONTH,
       SUM(QUANTITY * PRICE) AS MONTHLY_SALES
FROM SALES
GROUP BY FORMAT(SALE_DATE, '%Y-%M');

--SALES BREAKDOWN BY PRODUCT CATEGORY.

SELECT P.CATEGORY,
       SUM(S.QUANTITY * S.PRICE) AS TOTAL_SALES
FROM SALES S
    JOIN PRODUCTS P
        ON S.PRODUCT_ID = P.PRODUCT_ID
GROUP BY P.CATEGORY;

--TOTAL SALES PER CUSTOMER.

SELECT O.CUSTOMER_ID,
       SUM(S.QUANTITY * S.PRICE) AS TOTAL_SALES
FROM SALES S
    JOIN ORDERS O
        ON S.ORDER_ID = O.ORDER_ID
GROUP BY O.CUSTOMER_ID;

--SALES PERFORMANCE BY REGION.

SELECT R.REGION_NAME,
       SUM(S.QUANTITY * S.PRICE) AS TOTAL_SALES
FROM SALES S
    JOIN ORDERS O
        ON S.ORDER_ID = O.ORDER_ID
    JOIN REGIONS R
        ON O.REGION_ID = R.REGION_ID
GROUP BY R.REGION_NAME;

--DAILY SALES SUMMARY.

SELECT SALE_DATE,
       SUM(QUANTITY * PRICE) AS DAILY_SALES
FROM SALES
GROUP BY SALE_DATE;

--IDENTIFY CUSTOMERS WITH THE HIGHEST SALES VOLUME.

SELECT TOP 10
    O.CUSTOMER_ID,
    SUM(S.QUANTITY * S.PRICE) AS TOTAL_SALES
FROM SALES S
    JOIN ORDERS O
        ON S.ORDER_ID = O.ORDER_ID
GROUP BY O.CUSTOMER_ID
ORDER BY TOTAL_SALES DESC

--PRODUCTS NOT SOLD IN THE LAST MONTH. 

SELECT TOP 3
    P.PRODUCT_ID,
    P.PRODUCT_NAME
FROM PRODUCTS P
    LEFT JOIN SALES S
        ON P.PRODUCT_ID = S.PRODUCT_ID
           AND S.SALE_DATE >= GETDATE() - DATEADD(MONTH, -1, GETDATE())
WHERE S.SALE_ID IS NULL;

--TOP 3 REGIONS BY SALES AMOUNT.

SELECT R.REGION_NAME,
       SUM(S.QUANTITY * S.PRICE) AS TOTAL_SALES
FROM SALES S
    JOIN ORDERS O
        ON S.ORDER_ID = O.ORDER_ID
    JOIN REGIONS R
        ON O.REGION_ID = R.REGION_ID
GROUP BY R.REGION_NAME
ORDER BY TOTAL_SALES DESC

--SALES COMPARISON BETWEEN TWO SPECIFIC REGIONS.

SELECT R.REGION_NAME,
       SUM(S.QUANTITY * S.PRICE) AS TOTAL_SALES
FROM SALES S
    JOIN ORDERS O
        ON S.ORDER_ID = O.ORDER_ID
    JOIN REGIONS R
        ON O.REGION_ID = R.REGION_ID
WHERE R.REGION_NAME IN ( 'NORTH', 'SOUTH' )
GROUP BY R.REGION_NAME;

--NUMBER OF UNIQUE CUSTOMERS PER REGION.

SELECT R.REGION_NAME,
       COUNT(DISTINCT O.CUSTOMER_ID) AS UNIQUE_CUSTOMERS
FROM SALES S
    JOIN ORDERS O
        ON S.ORDER_ID = O.ORDER_ID
    JOIN REGIONS R
        ON O.REGION_ID = R.REGION_ID
GROUP BY R.REGION_NAME;

--AVERAGE ORDER VALUE FOR EACH CUSTOMER.

SELECT CUSTOMER_ID,
       AVG(ORDER_TOTAL) AS AVG_ORDER_VALUE
FROM
(
    SELECT O.CUSTOMER_ID,
           O.ORDER_ID,
           SUM(S.QUANTITY * S.PRICE) AS ORDER_TOTAL
    FROM SALES S
        JOIN ORDERS O
            ON S.ORDER_ID = O.ORDER_ID
    GROUP BY O.CUSTOMER_ID,
             O.ORDER_ID
) AS CUSTOMER_ORDERS
GROUP BY CUSTOMER_ID;
--SALES CONTRIBUTION OF EACH PRODUCT TO TOTAL SALES.

SELECT PRODUCT_ID,
       (SUM(QUANTITY * PRICE) /
        (
            SELECT SUM(QUANTITY * PRICE) FROM SALES
        )
       ) * 100 AS SALES_CONTRIBUTION
FROM SALES
GROUP BY PRODUCT_ID;

--TOP CUSTOMERS BY NUMBER OF ORDERS.

SELECT TOP 10
    CUSTOMER_ID,
    COUNT(ORDER_ID) AS NUMBER_OF_ORDERS
FROM ORDERS
GROUP BY CUSTOMER_ID
ORDER BY NUMBER_OF_ORDERS DESC

--YEAR-OVER-YEAR SALES GROWTH.

SELECT DATEPART(YEAR, SALE_DATE) AS YEAR,
       SUM(QUANTITY * PRICE) AS TOTAL_SALES,
       LAG(SUM(QUANTITY * PRICE)) OVER (ORDER BY DATEPART(YEAR, SALE_DATE)) AS PREVIOUS_YEAR_SALES,
       (SUM(QUANTITY * PRICE) - LAG(SUM(QUANTITY * PRICE)) OVER (ORDER BY DATEPART(YEAR, SALE_DATE)))
       / LAG(SUM(QUANTITY * PRICE)) OVER (ORDER BY DATEPART(YEAR, SALE_DATE)) * 100 AS YOY_GROWTH
FROM SALES
GROUP BY DATEPART(YEAR, SALE_DATE);

--SALES FOR EACH PRODUCT IN EACH REGION.

SELECT P.PRODUCT_NAME,
       R.REGION_NAME,
       SUM(S.QUANTITY * S.PRICE) AS TOTAL_SALES
FROM SALES S
    JOIN PRODUCTS P
        ON S.PRODUCT_ID = P.PRODUCT_ID
    JOIN ORDERS O
        ON S.ORDER_ID = O.ORDER_ID
    JOIN REGIONS R
        ON O.REGION_ID = R.REGION_ID
GROUP BY P.PRODUCT_NAME,
         R.REGION_NAME