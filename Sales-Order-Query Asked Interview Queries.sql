/**CREATE TABLE [DBO].[COUNTRY](
	[COUNTRYID] [INT] NOT NULL,
	[COUNTRYNAME] [VARCHAR](100) NULL,
	[REGION_ID] [INT] NULL,
)
CREATE TABLE [DBO].[CUSTOMER](
	[CUSTOMERID] [INT] NOT NULL,
	[CUSTOMERNAME] [VARCHAR](100) NULL,
	[COUNTRY_ID] [INT] NULL,
)
CREATE TABLE [DBO].[PRODUCT](
	[PRODUCTID] [INT] NOT NULL,
	[PRODUCTNAME] [VARCHAR](100) NULL,
	[CATEGORY_ID] [INT] NULL,
)
CREATE TABLE [DBO].[PRODUCTCATEGORY](
	[CATEGORYID] [INT] NOT NULL,
	[CATEGORYNAME] [VARCHAR](100) NULL,
)
CREATE TABLE [DBO].[REGION](
	[REGIONID] [INT] NOT NULL,
	[REGIONNAME] [VARCHAR](100) NULL,
)
CREATE TABLE [DBO].[SALES](
	[SALEID] [INT] NOT NULL,
	[PRODUCT_ID] [INT] NULL,
	[CUSTOMER_ID] [INT] NULL,
	[SALEDATE] [DATE] NULL,
	[AMOUNT] [DECIMAL](20, 4) NULL,
)

INSERT [DBO].[COUNTRY] ([COUNTRYID], [COUNTRYNAME], [REGION_ID]) VALUES (1, N'COUNTRY 1', 1)
INSERT [DBO].[COUNTRY] ([COUNTRYID], [COUNTRYNAME], [REGION_ID]) VALUES (2, N'COUNTRY 2', 2)
INSERT [DBO].[COUNTRY] ([COUNTRYID], [COUNTRYNAME], [REGION_ID]) VALUES (3, N'COUNTRY 3', 1)
GO
INSERT [DBO].[CUSTOMER] ([CUSTOMERID], [CUSTOMERNAME], [COUNTRY_ID]) VALUES (1, N'CUSTOMER A', 1)
INSERT [DBO].[CUSTOMER] ([CUSTOMERID], [CUSTOMERNAME], [COUNTRY_ID]) VALUES (2, N'CUSTOMER B', 2)
INSERT [DBO].[CUSTOMER] ([CUSTOMERID], [CUSTOMERNAME], [COUNTRY_ID]) VALUES (3, N'CUSTOMER C', 1)
INSERT [DBO].[CUSTOMER] ([CUSTOMERID], [CUSTOMERNAME], [COUNTRY_ID]) VALUES (4, N'CUSTOMER D', 3)
GO
INSERT [DBO].[PRODUCT] ([PRODUCTID], [PRODUCTNAME], [CATEGORY_ID]) VALUES (1, N'PRODUCT A', 1)
INSERT [DBO].[PRODUCT] ([PRODUCTID], [PRODUCTNAME], [CATEGORY_ID]) VALUES (2, N'PRODUCT B', 2)
INSERT [DBO].[PRODUCT] ([PRODUCTID], [PRODUCTNAME], [CATEGORY_ID]) VALUES (3, N'PRODUCT C', 1)
INSERT [DBO].[PRODUCT] ([PRODUCTID], [PRODUCTNAME], [CATEGORY_ID]) VALUES (4, N'PRODUCT D', 1)
INSERT [DBO].[PRODUCT] ([PRODUCTID], [PRODUCTNAME], [CATEGORY_ID]) VALUES (5, N'PRODUCT E', 1)
INSERT [DBO].[PRODUCT] ([PRODUCTID], [PRODUCTNAME], [CATEGORY_ID]) VALUES (6, N'PRODUCT F', 2)
INSERT [DBO].[PRODUCT] ([PRODUCTID], [PRODUCTNAME], [CATEGORY_ID]) VALUES (7, N'PRODUCT G', 2)
INSERT [DBO].[PRODUCT] ([PRODUCTID], [PRODUCTNAME], [CATEGORY_ID]) VALUES (8, N'PRODUCT H', 2)
GO
INSERT [DBO].[PRODUCTCATEGORY] ([CATEGORYID], [CATEGORYNAME]) VALUES (1, N'CATEGORY X')
INSERT [DBO].[PRODUCTCATEGORY] ([CATEGORYID], [CATEGORYNAME]) VALUES (2, N'CATEGORY Y')
GO
INSERT [DBO].[REGION] ([REGIONID], [REGIONNAME]) VALUES (1, N'NORTH AMERICA')
INSERT [DBO].[REGION] ([REGIONID], [REGIONNAME]) VALUES (2, N'EUROPE')
GO
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (1, 1, 1, CAST(N'2023-01-01' AS DATE), CAST(100.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (2, 2, 2, CAST(N'2023-01-02' AS DATE), CAST(200.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (3, 1, 3, CAST(N'2023-01-03' AS DATE), CAST(150.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (4, 1, 1, CAST(N'2024-01-03' AS DATE), CAST(350.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (5, 3, 2, CAST(N'2024-09-03' AS DATE), CAST(950.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (6, 2, 3, CAST(N'2023-01-03' AS DATE), CAST(1050.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (7, 4, 2, CAST(N'2024-09-03' AS DATE), CAST(270.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (8, 5, 1, CAST(N'2024-09-03' AS DATE), CAST(5000.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (9, 6, 3, CAST(N'2024-09-03' AS DATE), CAST(2000.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (10, 7, 3, CAST(N'2024-09-03' AS DATE), CAST(1500.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (11, 5, 1, CAST(N'2024-09-03' AS DATE), CAST(1200.0000 AS DECIMAL(20, 4)))
INSERT [DBO].[SALES] ([SALEID], [PRODUCT_ID], [CUSTOMER_ID], [SALEDATE], [AMOUNT]) VALUES (12, 4, 2, CAST(N'2024-09-03' AS DATE), CAST(1700.0000 AS DECIMAL(20, 4)))
GO
ALTER TABLE [DBO].[COUNTRY]  WITH CHECK ADD FOREIGN KEY([REGION_ID])
REFERENCES [DBO].[REGION] ([REGIONID])
GO
ALTER TABLE [DBO].[CUSTOMER]  WITH CHECK ADD FOREIGN KEY([COUNTRY_ID])
REFERENCES [DBO].[COUNTRY] ([COUNTRYID])
GO
ALTER TABLE [DBO].[PRODUCT]  WITH CHECK ADD FOREIGN KEY([CATEGORY_ID])
REFERENCES [DBO].[PRODUCTCATEGORY] ([CATEGORYID])
GO
ALTER TABLE [DBO].[SALES]  WITH CHECK ADD FOREIGN KEY([CUSTOMER_ID])
REFERENCES [DBO].[CUSTOMER] ([CUSTOMERID])
GO
ALTER TABLE [DBO].[SALES]  WITH CHECK ADD FOREIGN KEY([PRODUCT_ID])
REFERENCES [DBO].[PRODUCT] ([PRODUCTID])
GO
**/

/** QUESTIONS :

1.TOP 5 SELLING PRODUCTS
2.SQL QUERY TO FIND PRODUCT WHICH HAS NOT BEEN SOLD YET
3.SQL QUERY TO FIND PRODUCT  WHICH HAS BEEN SOLD AT LEAST ONCE
4.SQL QUERY TO FIND CUSTOMER WISE SALES
5.SQL QUERY TO FIND PRODUCT WISE TOTAL SALES
6.SQL QUERY TO FIND CUSTOMER WHO ORDER MORE THAN 1000
7.SQL QUERY TO FIND ALL CUSTOMER WHO ORDER MORE THAN 1000 LAST MONTH
8.QUERY TO AGGREGATES SALES BY PRODUCT CATEGORY.
9.DAILY SALES REPORT: QUERY TO GENERATES A REPORT OF DAILY SALES REVENUE.
10.PRODUCTS NEVER SOLD: QUERY TO FINDS PRODUCTS THAT HAVE NEVER BEEN SOLD.
11. QUERY TO FIND EACH MONTH SALES OF YEAR 2023
12. QUERY TO FECH AVG SALARY PRODUCT WISE.
13. FIND TOP 2 SALING PRODUCTS (MORE THAN ONE PRODUCT CAN HAVE SAME SALES).

**/

-------------------------------------------------------------------------------------------------------------------------------

-- TOP 5 SELLING PRODUCTS
SELECT TOP 5
    P.PRODUCTID,
    P.PRODUCTNAME,
    SUM(S.AMOUNT) AS TOTALAMOUNT
FROM 
    PRODUCT P
JOIN 
    SALES S ON P.PRODUCTID = S.PRODUCT_ID
GROUP BY 
    P.PRODUCTID, P.PRODUCTNAME
ORDER BY 
    TOTALAMOUNT DESC
--SQL QUERY TO FIND PRODUCT WHICH HAS NOT BEEN SOLD YET
SELECT 
    P.PRODUCTID,
    P.PRODUCTNAME,
    P.CATEGORY_ID,
    ISNULL(S.AMOUNT,0)
FROM 
    PRODUCT P
LEFT JOIN 
    SALES S ON P.PRODUCTID = S.PRODUCT_ID
WHERE 
    S.SALEID IS NULL;
--SQL QUERY TO FIND PRODUCT  WHICH HAS BEEN SOLD AT LEAST ONCE
SELECT 
    DISTINCT P.PRODUCTID,
    P.PRODUCTNAME
FROM 
    PRODUCT P
JOIN 
    SALES S ON P.PRODUCTID = S.PRODUCT_ID;
--SQL QUERY TO FIND CUSTOMER WISE SALES
SELECT 
    C.CUSTOMERID,
    C.CUSTOMERNAME,
    SUM(S.AMOUNT) AS TOTALSALES
FROM 
    SALES S
JOIN 
    CUSTOMER C ON C.CUSTOMERID = S.CUSTOMER_ID
GROUP BY 
    C.CUSTOMERID, C.CUSTOMERNAME
ORDER BY 
    TOTALSALES DESC;

--SQL QUERY TO FIND PRODUCT WISE TOTAL SALES
SELECT 
    P.PRODUCTID,
	P.PRODUCTNAME,
    SUM(S.AMOUNT) AS TOTALSALES
FROM 
    SALES S
JOIN 
    PRODUCT P ON P.PRODUCTID = S.PRODUCT_ID
GROUP BY 
    P.PRODUCTID, P.PRODUCTNAME
ORDER BY 
    TOTALSALES DESC;

--SQL QUERY TO FIND CUSTOMER WHO ORDER MORE THAN 1000
SELECT 
    C.CUSTOMERID,
    C.CUSTOMERNAME,
    SUM(S.AMOUNT) AS TOTALSALES
FROM 
    SALES S
JOIN 
    CUSTOMER C ON C.CUSTOMERID = S.CUSTOMER_ID
GROUP BY 
    C.CUSTOMERID, C.CUSTOMERNAME
HAVING  SUM(S.AMOUNT) > 4000
ORDER BY TOTALSALES DESC

--SQL QUERY TO FIND ALL CUSTOMER WHO ORDER MORE THAN 1000 LAST MONTH
	
SELECT 
    C.CUSTOMERID,
    C.CUSTOMERNAME,
    SUM(S.AMOUNT) AS TOTALSALES
FROM 
    SALES S
JOIN 
    CUSTOMER C ON C.CUSTOMERID = S.CUSTOMER_ID
	WHERE 
    S.SALEDATE >= '2024-06-01' AND S.SALEDATE < '2024-07-01'
GROUP BY 
    C.CUSTOMERID, C.CUSTOMERNAME
HAVING  SUM(S.AMOUNT) > 4000
ORDER BY TOTALSALES DESC

--QUERY TO AGGREGATES SALES BY PRODUCT CATEGORY.

SELECT C.CATEGORYNAME, SUM(S.AMOUNT) AS TOTALREVENUE
FROM SALES S
JOIN PRODUCT P ON S.PRODUCT_ID = P.PRODUCTID
JOIN PRODUCTCATEGORY C ON C.CATEGORYID = P.CATEGORY_ID
GROUP BY C.CATEGORYNAME;

-- DAILY SALES REPORT: QUERY TO GENERATES A REPORT OF DAILY SALES REVENUE.

SELECT S.SALEDATE, SUM(S.AMOUNT) AS DAILYREVENUE
FROM SALES S
JOIN PRODUCT P ON S.PRODUCT_ID = P.PRODUCTID
GROUP BY S.SALEDATE
ORDER BY S.SALEDATE;

--PRODUCTS NEVER SOLD: QUERY TO FINDS PRODUCTS THAT HAVE NEVER BEEN SOLD.

SELECT P.PRODUCTNAME
FROM PRODUCT P
LEFT JOIN SALES S ON P.PRODUCTID = S.PRODUCT_ID
WHERE S.SALEID IS NULL;
